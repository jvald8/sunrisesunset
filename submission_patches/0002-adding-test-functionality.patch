From 7827a92d69ebbf0fedf1bb3d495c2853b895812a Mon Sep 17 00:00:00 2001
From: Jon Ringvald <jvald8@gmail.com>
Date: Wed, 5 Aug 2015 21:25:08 -0700
Subject: [PATCH 2/4] adding test functionality

---
 bower.json                      |  8 ++++-
 gruntfile.js                    | 19 +++++++++++
 karma.conf.js                   | 70 +++++++++++++++++++++++++++++++++++++++++
 package.json                    | 10 ++++++
 public/index.html               | 26 +++++++--------
 public/indexController.js       |  4 +--
 spec/weather_controller_spec.js | 54 +++++++++++++++++++++++++++++++
 todo.md                         |  3 +-
 8 files changed, 175 insertions(+), 19 deletions(-)
 create mode 100644 gruntfile.js
 create mode 100644 karma.conf.js
 create mode 100644 spec/weather_controller_spec.js

diff --git a/bower.json b/bower.json
index 9383ca4..b33a09d 100644
--- a/bower.json
+++ b/bower.json
@@ -17,6 +17,12 @@
     "tests"
   ],
   "dependencies": {
-    "angular-bootstrap": "~0.13.2"
+    "angular-bootstrap": "~0.13.2",
+    "angular-mocks": "~1.4.3"
+  },
+  "devDependencies": {
+    "karma": "~0.4.6",
+    "jasmine": "~2.3.4",
+    "karma-jasmine": "~0.3.6"
   }
 }
diff --git a/gruntfile.js b/gruntfile.js
new file mode 100644
index 0000000..f81f9ee
--- /dev/null
+++ b/gruntfile.js
@@ -0,0 +1,19 @@
+module.exports = function(grunt) {
+  grunt.initConfig({
+    karma: {
+      unit: {
+        configFile: 'test/karma.conf.js',
+        singleRun: true
+      }
+    },
+    bower: {
+    install: {
+
+      },
+    },
+
+  });
+
+  grunt.loadNpmTasks('grunt-bower-task');
+
+};
diff --git a/karma.conf.js b/karma.conf.js
new file mode 100644
index 0000000..13dc94f
--- /dev/null
+++ b/karma.conf.js
@@ -0,0 +1,70 @@
+// Karma configuration
+// Generated on Wed Aug 05 2015 17:45:38 GMT-0700 (PDT)
+
+module.exports = function(config) {
+  config.set({
+
+    // base path that will be used to resolve all patterns (eg. files, exclude)
+    basePath: '',
+
+
+    // frameworks to use
+    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter
+    frameworks: ['jasmine'],
+
+
+    // list of files / patterns to load in the browser
+    files: [
+      'https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true',
+      'bower_components/angular/angular.js',
+      'bower_components/angular-bootstrap/ui-bootstrap*.js',
+      'bower_components/angular-mocks/angular-mocks.js',
+      'public/indexController.js',
+      'spec/*.js'
+    ],
+
+
+    // list of files to exclude
+    exclude: [
+    ],
+
+
+    // preprocess matching files before serving them to the browser
+    // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor
+    preprocessors: {
+    },
+
+
+    // test results reporter to use
+    // possible values: 'dots', 'progress'
+    // available reporters: https://npmjs.org/browse/keyword/karma-reporter
+    reporters: ['progress'],
+
+
+    // web server port
+    port: 9876,
+
+
+    // enable / disable colors in the output (reporters and logs)
+    colors: true,
+
+
+    // level of logging
+    // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG
+    logLevel: config.LOG_INFO,
+
+
+    // enable / disable watching file and executing tests whenever any file changes
+    autoWatch: false,
+
+
+    // start these browsers
+    // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher
+    browsers: ['PhantomJS'],
+
+
+    // Continuous Integration mode
+    // if true, Karma captures browsers, runs the tests and exits
+    singleRun: true
+  })
+}
diff --git a/package.json b/package.json
index b5d5b7f..c3300ee 100644
--- a/package.json
+++ b/package.json
@@ -19,5 +19,15 @@
   "homepage": "https://github.com/renewablefunding/js_codechallenge",
   "dependencies": {
     "express": "^4.13.3"
+  },
+  "devDependencies": {
+    "grunt": "^0.4.5",
+    "grunt-bower-task": "^0.4.0",
+    "jasmine": "^2.3.2",
+    "jasmine-core": "^2.3.4",
+    "karma": "^0.13.7",
+    "karma-jasmine": "^0.3.6",
+    "karma-phantomjs-launcher": "^0.2.1",
+    "phantomjs": "^1.9.17"
   }
 }
diff --git a/public/index.html b/public/index.html
index f2485ab..1ba232f 100644
--- a/public/index.html
+++ b/public/index.html
@@ -16,23 +16,20 @@
 
   <body ng-controller='WeatherController'>
 
+    <h1 class="text-center">Welcome to the Weather App!</h1>
+    <h2 class="text-center">Thanks for the opportunity Renew Financial!</h2>
+    <br>
   <h4>Pick your dates:</h4>
     <div class="row">
-        <div class="col-md-6">
-            <p class="input-group">
+        <div class="col-md-2">
+            <p class="input-group">From:
               <input class="text-center" type="date" class="form-control" datepicker-popup ng-model="firstDate" is-open="opened" min-date="minDate" max-date="'2020-06-22'" datepicker-options="dateOptions" ng-required="true" close-text="Close" />
-              <!--<span class="input-group-btn">
-                <button type="button" class="btn btn-default" ng-click="open($event)"><i class="glyphicon glyphicon-calendar"></i></button>
-              </span>-->
             </p>
         </div>
 
-        <div class="col-md-6">
-            <p class="input-group">
+        <div class="col-md-2">
+            <p class="input-group">To:
               <input class="text-center" type="date" class="form-control" datepicker-popup ng-model="secondDate" is-open="opened" min-date="minDate" max-date="'2020-06-22'" datepicker-options="dateOptions" ng-required="true" close-text="Close"  />
-              <!--<span class="input-group-btn">
-                <button type="button" class="btn btn-default" ng-click="open($event)"><i class="glyphicon glyphicon-calendar"></i></button>
-              </span>-->
             </p>
         </div>
     </div>
@@ -44,7 +41,7 @@
           <input class="form-control" id="address" type="textbox" value="Enter an address" ng-model='address' ng-required='true'>
           <br>
           <div>
-              <button type="button" class="btn btn-default" ng-click="fetchInfo(address, firstDate, secondDate)"><i class="glyphicon glyphicon-plus"> No whammy, no whammy, BIG MONEY!!!</i></button>
+              <button type="button" class="btn btn-success" ng-click="fetchInfo(address, firstDate, secondDate)"><i class="glyphicon glyphicon-plus"> LETS DO IT!!!</i></button>
           </div>
         </p>
       </div>
@@ -58,11 +55,12 @@
       <div class="col-lg-12">
 
 
-        <div class="widget-header" ng-show="showDays">
-          <div class="pull-right"><input type="text" class="form-control input-sm" ng-model="query" placeholder='Filter by date'></div>
-        </div>
+
 
         <div class="table-responsive" ng-show="showDays">
+          <div class="widget-header" ng-show="showDays">
+            <div class="pull-right"><input type="text" class="form-control input-sm" ng-model="query" placeholder='Filter by date'></div>
+        </div>
           <table class="table">
             <thead>
               <tr>
diff --git a/public/indexController.js b/public/indexController.js
index d0c909f..6679360 100644
--- a/public/indexController.js
+++ b/public/indexController.js
@@ -1,5 +1,3 @@
-
-
 angular.module('weather', ['ui.bootstrap'])
 .controller('WeatherController', function($scope, $http) {
   // toggle defaults
@@ -121,6 +119,8 @@ Date.prototype.toFormattedString = function () {
             String(this.getFullYear()).substr(2, 2)].join("/");
 };
 
+
+// helper functions
 function getSecondsElapsed(timeString) {
   var indexOfFirstColon = timeString.indexOf(':', 0);
   var indexOfSecondColon = timeString.indexOf(':', indexOfFirstColon + 1);
diff --git a/spec/weather_controller_spec.js b/spec/weather_controller_spec.js
new file mode 100644
index 0000000..6f767be
--- /dev/null
+++ b/spec/weather_controller_spec.js
@@ -0,0 +1,54 @@
+describe('WeatherController', function() {
+  beforeEach(module('weather'));
+
+  var weatherController;
+  var httpBackend;
+  var scope;
+
+  beforeEach(
+    inject(function($injector, $controller, $rootScope, $httpBackend) {
+      httpBackend = $httpBackend;
+      scope = $rootScope.$new();
+      weatherController = $controller('WeatherController', {
+        $scope: scope
+      })
+  }));
+
+  afterEach(function() {
+        httpBackend.verifyNoOutstandingExpectation();
+        httpBackend.verifyNoOutstandingRequest();
+  });
+
+  it('weather controller isn\'t null!', function() {
+    expect(weatherController).not.toBe(null);
+  });
+
+  it('checking default 7 day date range', function() {
+    expect(scope.dateRange).toEqual([]);
+    var firstDate = scope.firstDate;
+    var secondDate = scope.secondDate;
+    scope.getDateRange(firstDate, secondDate);
+    expect(scope.dateRange.length).toEqual(7);
+  });
+
+  it('checking getDateRange with 2 day date range', function() {
+    expect(scope.dateRange).toEqual([]);
+    var firstDate = new Date();
+    var secondDateDay = firstDate.getDate() + 1;
+    var secondDate = new Date(new Date().setDate(secondDateDay));
+    scope.getDateRange(firstDate, secondDate);
+    expect(scope.dateRange.length).toEqual(2);
+  });
+
+  it('checking getDateRange with 20 day date range', function() {
+    expect(scope.dateRange).toEqual([]);
+    var firstDate = new Date();
+    var secondDateDay = firstDate.getDate() + 19;
+    var secondDate = new Date(new Date().setDate(secondDateDay));
+    scope.getDateRange(firstDate, secondDate);
+    expect(scope.dateRange.length).toEqual(20);
+  });
+
+  // test getdays function
+
+});
diff --git a/todo.md b/todo.md
index dd0ff49..139597f 100644
--- a/todo.md
+++ b/todo.md
@@ -1,3 +1,2 @@
-- Open issues:
--- add a bit of testing
+
 
-- 
2.3.6

